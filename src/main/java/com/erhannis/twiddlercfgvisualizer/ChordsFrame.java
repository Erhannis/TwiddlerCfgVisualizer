/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.erhannis.twiddlercfgvisualizer;

import com.erhannis.mathnstuff.MeUtils;
import com.erhannis.mathnstuff.components.ImagePanel;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JTextField;

/**
 *
 * @author erhannis
 */
public class ChordsFrame extends javax.swing.JFrame {

    private List<Chord> chords = new ArrayList<>();
    private List<Chord> highightedChords = new ArrayList<>();
    private ArrayList<String> stringTable = new ArrayList<>();

    /**
     * Creates new form RenderFrame
     */
    public ChordsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        panelDisplay = new ImagePanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        tfRegex = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(1.0);

        javax.swing.GroupLayout panelDisplayLayout = new javax.swing.GroupLayout(panelDisplay);
        panelDisplay.setLayout(panelDisplayLayout);
        panelDisplayLayout.setHorizontalGroup(
            panelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 627, Short.MAX_VALUE)
        );
        panelDisplayLayout.setVerticalGroup(
            panelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        jSplitPane1.setTopComponent(panelDisplay);

        jButton1.setText("[a-z]");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tfRegex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRegexActionPerformed(evt);
            }
        });

        jButton2.setText("[0-9]");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(".{2,}");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 345, Short.MAX_VALUE)
                .addComponent(tfRegex, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(tfRegex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    public void setChords(List<Chord> chords, ArrayList<String> stringTable) {
        this.chords = chords;
        this.stringTable = stringTable;
        this.highightedChords = new ArrayList<>();
        setRegex(tfRegex.getText());
        ((ImagePanel)panelDisplay).setImage(renderChords());
    }
    

    private static final float FONT = 10;
    private static final Color CO = MeUtils.interpolateColors(Color.GRAY, Color.WHITE, 0.5);
    private static final Color CL = MeUtils.interpolateColors(Color.RED, Color.WHITE, 0.5);
    private static final Color CM = MeUtils.interpolateColors(Color.BLUE, Color.WHITE, 0.5);
    private static final Color CR = MeUtils.interpolateColors(Color.GREEN, Color.WHITE, 0.5);
    private static final Color[] COLORS = {CO, CL, CM, CR};
    private static final double SX = 1600;
    private static final double SY = 600;
    private static final double DY = SY / 4;
    private static final double DX = SX / (4*4*4*3);
    
    private BufferedImage renderChords() {
        BufferedImage bi = new BufferedImage((int)SX, (int)SY, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g = (Graphics2D) bi.getGraphics();
        
        g.setBackground(Color.WHITE);
        g.clearRect(0, 0, (int)SX, (int)SY);
        g.setFont(g.getFont().deriveFont(FONT));
        
        subRender(g, 0, 0, SX / 4, 4);
        
        int multichords = 0;
        g.setColor(Color.BLACK);
        AffineTransform at = (AffineTransform)g.getTransform().clone();
        for (Chord c : chords) {
            if (c.isMultichord()) {
                multichords++;
                continue;
            }
            
            double x = getChordX(c) * DX;
            double y = getChordY(c) * DY;
            
            g.translate(x+1, y);
            g.rotate(Math.PI/2);
            g.drawString(c.getString(stringTable), 0, 0);
            g.setTransform((AffineTransform)at.clone());
            
        }
        System.out.println("Multichords unhandled: " + multichords);
        
        return bi;
    }
    
    private int getChordX(Chord c) { // Does not work for multichords
        int x = 0;

        if (c.tbSp) x += 1*4*4*3;
        if (c.tbE) x += 2*4*4*3;
        if (c.tbA) x += 3*4*4*3;
        
        if (c.tbDel) x += 1*4*3;
        if (c.tbF) x += 2*4*3;
        if (c.tbB) x += 3*4*3;
        
        if (c.tbBs) x += 1*3;
        if (c.tbG) x += 2*3;
        if (c.tbC) x += 3*3;
        
        if (c.tbEnt) x += 0;
        if (c.tbH) x += 1;
        if (c.tbD) x += 2;
        
        return x;
    }
    
    private int getChordY(Chord c) {
        return (c.getLowestRow()-1);
    }
    
    private boolean isHighlighted(int left, int top) {
        int R = 3; // Kinda janky
        for (Chord c : highightedChords) {
            if (Math.abs(getChordX(c)*DX - left) <= R && Math.abs(getChordY(c)*DY - top) <= R) {
                return true;
            }
        }
        return false;
    }
    
    private void subRender(Graphics2D g, double left, double top, double dx, int levels) {
        if (levels == 0) {
            return;
        }
        if (levels > 1) {
            for (int i = 0; i < 4; i++) {
                if (isHighlighted((int)(left+i*dx), (int)top)) {
                    g.setColor(COLORS[i].darker());
                } else {
                    g.setColor(COLORS[i]);
                }
                g.fillRect((int)(left+i*dx), (int)top, (int)dx+1, (int)DY);
            }
        } else {
            for (int i = 0; i < 3; i++) {
                if (isHighlighted((int)(left+i*dx), (int)top)) {
                    g.setColor(COLORS[i+1].darker());
                } else {
                    g.setColor(COLORS[i+1]);
                }
                g.fillRect((int)(left+i*dx), (int)top, (int)dx+1, (int)DY);
            }
        }
        for (int i = 0; i < 4; i++) {
            double div = (levels == 2) ? 3 : 4;
            subRender(g, left + dx*i, top+DY, dx/div, levels-1);
        }
    }
    
    
    public void setRegex(String s) {
        highightedChords.clear();
        for (Chord c : chords) {
            if (s != null && !s.isEmpty() && c.getSbString(stringTable).matches(s)) {
                highightedChords.add(c);
            }
        }
        ((ImagePanel)panelDisplay).setImage(renderChords());
    }
    
    private void setRegex(java.awt.event.ActionEvent evt) {
        String s = null;
        if (evt.getSource() instanceof JButton) {
            s = ((JButton)evt.getSource()).getText();
        } else if (evt.getSource() instanceof JTextField) {
            s = ((JTextField)evt.getSource()).getText();
        }
        tfRegex.setText(s);
        setRegex(s);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setRegex(evt);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setRegex(evt);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setRegex(evt);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setRegex(evt);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tfRegexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRegexActionPerformed
        setRegex(evt);
    }//GEN-LAST:event_tfRegexActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChordsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel panelDisplay;
    private javax.swing.JTextField tfRegex;
    // End of variables declaration//GEN-END:variables
}
